generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../dev.db"
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  password   String
  tweets     Tweet[]
  hearts     Heart[]
  retweets   Retweet[]
  followedBy Follows[] @relation("following")
  following  Follows[] @relation("follower")
  joined     DateTime  @default(now())
  deleted    DateTime?
}

model Follows {
  follower    User @relation("follower", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int

  @@id([followerId, followingId])
}

model Tweet {
  id   Int    @id @default(autoincrement())
  body String

  retweetedBy Retweet[]
  heartBy     Heart[]

  author   User    @relation(fields: [authorId], references: [id])
  authorId Int
  //  A tweet can have zero or ONE Parent, and a tweet can have zero or more Comments
  parentId Int?
  parent   Tweet?  @relation("ParentComments", fields: [parentId], references: [id])
  comments Tweet[] @relation("ParentComments")

  createdAt DateTime  @default(now())
  deleted   DateTime?
}

model Retweet {
  id          Int      @unique
  by          User     @relation(fields: [byId], references: [id])
  byId        Int
  tweet       Tweet    @relation(fields: [tweetId], references: [id])
  tweetId     Int
  retweetedAt DateTime @default(now())

  @@id([byId, tweetId])
}

model Heart {
  id        Int      @unique
  by        User     @relation(fields: [byId], references: [id])
  byId      Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int
  createdAt DateTime @default(now())

  @@id([byId, tweetId])
}
